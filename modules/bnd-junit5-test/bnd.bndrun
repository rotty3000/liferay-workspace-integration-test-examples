# include the _patform.bndrun_ provided by the workspace template (make sure to use a recent version of blade)
-include: ../../platform.bndrun

# Overload the default set in _platform.bndrun_ (necessary since it's not visible from the project)
targetPlatformDistro: ${project.targetPlatformDistro}

# JUnit5 tester implementation 
-tester: biz.aQute.tester.junit-platform

# in order to connect to remote runtime (a.k.a. Liferay CE/DXP) add the remote launcher to the tester runpath (the
# classspath of the test client)
-runpath: biz.aQute.remote.launcher;version=latest

# configure the remote connection (used by the remote launcher to connect to the remote agent deployed to
# Liferay CE/DXP)
-runremote: \
	test;\
		shell=-1;\
		jdb=8000;\
		host=localhost;\
		agent=29998;\
		timeout=30000

# OPTIONAL: enable tracing for the test execution
-runtrace: true

# the _-runbundles_ property is calculated by the _resolve_ task. this helps keep the result sorted
-runstartlevel: \
    order=sortbynameversion,\
    begin=-1

# include the junit5 runtime dependencies
-runrequires.test: \
	bnd.identity;id='junit-jupiter-engine',\
	bnd.identity;id='junit-platform-launcher'

# the calculated set of deployment dependencies
-runbundles: \
	assertj-core;version='[3.17.2,3.17.3)',\
	bnd.junit5.test;version='[1.0.0,1.0.1)',\
	junit-jupiter-api;version='[5.7.0,5.7.1)',\
	junit-jupiter-engine;version='[5.7.0,5.7.1)',\
	junit-platform-commons;version='[1.7.0,1.7.1)',\
	junit-platform-engine;version='[1.7.0,1.7.1)',\
	junit-platform-launcher;version='[1.7.0,1.7.1)',\
	org.opentest4j;version='[1.2.0,1.2.1)',\
	org.osgi.test.common;version='[0.10.0,0.10.1)',\
	org.osgi.test.junit5;version='[0.10.0,0.10.1)'
